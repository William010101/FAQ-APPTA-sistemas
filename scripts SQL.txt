
CREATE TABLE public.produto
(
  id_produto SERIAL PRIMARY KEY,
  categoria character varying(20),
  nomeproduto character varying(50),
  visivel boolean
)
WITH (
  OIDS=FALSE
);
ALTER TABLE public.produto
  OWNER TO postgres;





CREATE TABLE public.pergunta
(
  id_pergunta SERIAL PRIMARY KEY,
  pergunta character varying(100),
  resposta character varying(50000),
  chave character varying(500),
  produto character varying(50),
  datacadastro timestamp without time zone,
  video character varying(800),
  subcategoria character varying(50),
  usuario character varying(50),
  numacessos integer,
  idusuario integer
)
WITH (
  OIDS=FALSE
);
ALTER TABLE public.pergunta
  OWNER TO postgres;
CREATE TABLE public.usuarios
(
  id_usuario SERIAL PRIMARY KEY,
  nome character varying(30),
  senha character varying(32),
  email character varying(32),
  fotoperfil character varying(50)
);

----------------------------------------------------------

-- Criação da tabela categoria
CREATE TABLE categoria (
    id_categoria SERIAL PRIMARY KEY,
    nomeCategoria VARCHAR(100),
    visivel boolean,
    fk_id_produto INT,
    FOREIGN KEY (fk_id_produto) REFERENCES produto(id_produto)
);

-- Criação da tabela produto
CREATE TABLE produto (
    id_produto SERIAL PRIMARY KEY,
    imagem BYTEA NOT NULL,
    nomeproduto VARCHAR(100),
    visivel boolean
);

-- Criação da tabela subcategoria
CREATE TABLE subcategoria (
    id_subcategoria SERIAL PRIMARY KEY,
    nomesubcategoria VARCHAR(100),
    visivel boolean,
    fk_id_categoria INT,
    FOREIGN KEY (fk_id_categoria) REFERENCES categoria(id_categoria)
);

CREATE TABLE pergunta
(
  id_pergunta SERIAL PRIMARY KEY,
  pergunta VARCHAR(100),
  resposta VARCHAR(50000),
  datacadastro TIMESTAMP WITHOUT TIME ZONE,
  chave character varying(500),
  video VARCHAR(800),
  usuario VARCHAR(50),
  idusuario INTEGER,
  visivel boolean,
  fk_id_subcategoria INT,
  FOREIGN KEY (fk_id_subcategoria) REFERENCES subcategoria(id_subcategoria)
);

CREATE TABLE public.usuarios
(
  id_usuario SERIAL PRIMARY KEY,
  nome character varying(30),
  senha character varying(32),
  email character varying(32),
  fotoperfil character varying(50)
);

CREATE TABLE resposta_imagem (
    id_respostaimagem SERIAL PRIMARY KEY,
    ordem SERIAL,
    imagem BYTEA NOT NULL,
    Descricao VARCHAR(1000),
    resposta VARCHAR(50000),
    fk_id_pergunta INT,
    FOREIGN KEY (fk_id_pergunta) REFERENCES pergunta(id_pergunta)
);

------------------------------------------
gerar registros em subcategoria
INSERT INTO subcategoria (id_subcategoria, nomesubcategoria, visivel, fk_id_categoria)
SELECT
    (SELECT COALESCE(MAX(id_subcategoria), 0) FROM subcategoria) + row_number + 1, -- Próximo ID disponível
    'Subcategoria ' || ((SELECT COALESCE(MAX(id_subcategoria), 0) FROM subcategoria) + row_number + 1), -- Nome da subcategoria baseado no ID
    true, -- Define visibilidade como verdadeira para todas as subcategorias
    floor(random() * 250) + 1 -- Gera valores aleatórios de 1 a 250 para fk_id_categoria
FROM generate_series(1, 745) AS row_number;
--------------------------------------------
gera perguntas 
INSERT INTO pergunta (pergunta, resposta, datacadastro, video, usuario, idusuario, visivel, fk_id_subcategoria)
SELECT
    'Pergunta ' || generate_series(4, 1500), -- Pergunta única para cada registro
    'Resposta' 
    || generate_series(1, 1500), -- Resposta única para cada registro
    NOW(), -- Data de cadastro atual
    'https://youtu.be/syqJAgTQdlU?si=WljyCPC0Er_9gnNF', -- URL do vídeo
    'teste', -- Nome de usuário
    1, -- ID de usuário
    true, -- Visível
    floor(random() * 750) + 1 -- ID de subcategoria aleatório entre 1 e 750
FROM
    generate_series(1, 1500); -- Gera 1500 linhas de dados
