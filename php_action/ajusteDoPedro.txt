<<<<<<< HEAD
<?php

class Categoria
{
    private $pdo;
    public int $id_categoria;
    public string $nomecategoria;
    private bool $visivel;
    private int $fk_id_produto;


    //Colocar função em outra classe ConexaoBD
    public function conectar()
    {
        try {
            $this->pdo = new PDO("pgsql:host=localhost;port=5432;dbname=postgres;user=postgres;password=masterkey");
            $this->pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        } catch (PDOException $e) {
            throw new PDOException($e);
        }
    }

    //Essa funão deve estar dentro da classe produto
    public function exibeNomeProduto()
    {
        //Produto prd = new Produto().GetProduto(); //Retorna objeto produto
        //retur prd.Nome;

        //string nomeProduto = new Produto().GetNomeProduto(id); //Retorna objeto produto
        //retur prd.Nome;

        /*
        global $idproduto;
        $idproduto = $_GET['id'];
        try {
            $this->conectar();
            $query = "SELECT id_produto, nomeproduto FROM produto WHERE id_produto = :idproduto";           
            $stmt = $this->pdo->prepare($query);
            $stmt->bindParam(":idproduto", $idproduto, PDO::PARAM_INT);
            $stmt->execute();
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            throw new PDOException($e);
        }
        */
    }
    public function GetCategorias(int $idProd)
    {
        global $idproduto;
        try {
            $this->conectar();
            // Query para selecionar dados da tabela categorias
            $query = "SELECT id_categoria, nomecategoria FROM categoria where fk_id_produto = :idProduto AND visivel = true";
            // Preparando e executando a query
            $stmt = $this->pdo->prepare($query);
            $stmt->bindParam(':idProduto', $idproduto, PDO::PARAM_INT);
            $stmt->execute();
            // Retornar todos os resultados como um array de objetos Categoria
            $arrayCategorias = $stmt->fetchAll(PDO::FETCH_CLASS, 'Categoria');
            
          $lstCategoria = new list<Catergoria>

            foreach ($arrayCategorias as $arrcat)
            {
                $cat = new Categoria();
                $cat.$id_categoria=$arrcat[0];
                $cat.$nomecategoria = $arrcat[1];
                $cat.$visivel = $arrcat[2];
                $cat.$fk_id_produto = $arrcat[3];

                lstCategoria.Add($cat)
            }

            return $lstCategoria;

        } catch (PDOException $e) {
            throw new PDOException($e);
        }
    }

    public function exibeSubcategoriaDaCategoria($id_categoria)
    {
        try {
            $this->conectar();
            // Query para selecionar dados da tabela categorias
            $query = "SELECT id_subcategoria, nomesubcategoria FROM subcategoria where fk_id_categoria = :id_categoria AND visivel = true";
            // Preparando e executando a query
            $stmt = $this->pdo->prepare($query);
            $stmt->bindParam(':id_categoria', $id_categoria, PDO::PARAM_INT);
            $stmt->execute();
            // Retornar todos os resultados como um array de objetos Categoria
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            throw new PDOException($e);
        }
    }
}
=======
<?php

class Categoria
{
    private $pdo;
    public int $id_categoria;
    public string $nomecategoria;
    private bool $visivel;
    private int $fk_id_produto;


    //Colocar função em outra classe ConexaoBD
    public function conectar()
    {
        try {
            $this->pdo = new PDO("pgsql:host=localhost;port=5432;dbname=postgres;user=postgres;password=masterkey");
            $this->pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        } catch (PDOException $e) {
            throw new PDOException($e);
        }
    }

    //Essa funão deve estar dentro da classe produto
    public function exibeNomeProduto()
    {
        //Produto prd = new Produto().GetProduto(); //Retorna objeto produto
        //retur prd.Nome;

        //string nomeProduto = new Produto().GetNomeProduto(id); //Retorna objeto produto
        //retur prd.Nome;

        /*
        global $idproduto;
        $idproduto = $_GET['id'];
        try {
            $this->conectar();
            $query = "SELECT id_produto, nomeproduto FROM produto WHERE id_produto = :idproduto";           
            $stmt = $this->pdo->prepare($query);
            $stmt->bindParam(":idproduto", $idproduto, PDO::PARAM_INT);
            $stmt->execute();
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            throw new PDOException($e);
        }
        */
    }
    public function GetCategorias(int $idProd)
    {
        global $idproduto;
        try {
            $this->conectar();
            // Query para selecionar dados da tabela categorias
            $query = "SELECT id_categoria, nomecategoria FROM categoria where fk_id_produto = :idProduto AND visivel = true";
            // Preparando e executando a query
            $stmt = $this->pdo->prepare($query);
            $stmt->bindParam(':idProduto', $idproduto, PDO::PARAM_INT);
            $stmt->execute();
            // Retornar todos os resultados como um array de objetos Categoria
            $arrayCategorias = $stmt->fetchAll(PDO::FETCH_CLASS, 'Categoria');
            
          $lstCategoria = new list<Catergoria>

            foreach ($arrayCategorias as $arrcat)
            {
                $cat = new Categoria();
                $cat.$id_categoria=$arrcat[0];
                $cat.$nomecategoria = $arrcat[1];
                $cat.$visivel = $arrcat[2];
                $cat.$fk_id_produto = $arrcat[3];

                lstCategoria.Add($cat)
            }

            return $lstCategoria;

        } catch (PDOException $e) {
            throw new PDOException($e);
        }
    }

    public function exibeSubcategoriaDaCategoria($id_categoria)
    {
        try {
            $this->conectar();
            // Query para selecionar dados da tabela categorias
            $query = "SELECT id_subcategoria, nomesubcategoria FROM subcategoria where fk_id_categoria = :id_categoria AND visivel = true";
            // Preparando e executando a query
            $stmt = $this->pdo->prepare($query);
            $stmt->bindParam(':id_categoria', $id_categoria, PDO::PARAM_INT);
            $stmt->execute();
            // Retornar todos os resultados como um array de objetos Categoria
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            throw new PDOException($e);
        }
    }
}
>>>>>>> 478127839adca7eb7893823a23e04b27c3bcfc5d
?>